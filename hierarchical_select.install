<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function hierarchical_select_install() {
  // Ensure the Hierarchical Select module runs after the Taxonomy and Content
  // Taxonomy modules! This should not be necessary to do, but apparently some
  // idiot module developer is changing the weight of the Taxonomy module...
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE name = 'taxonomy'"));
  $weight = max($weight, db_result(db_query("SELECT weight FROM {system} WHERE name = 'content_taxonomy'")));
  // Also ensure the Hierarchical Select module runs after the i18ntaxonomy
  // module.
  $weight = max($weight, db_result(db_query("SELECT weight FROM {system} WHERE name = 'i18ntaxonomy'")));
  db_query("UPDATE {system} SET weight = %d WHERE name  = '%s'", $weight + 1, 'hierarchical_select');
}


//----------------------------------------------------------------------------
// Schema updates.

// Update module weight.
function hierarchical_select_update_1() {
  $ret = array();

  // Ensure the Hierarchical Select module runs after the Taxonomy and Content
  // Taxonomy modules! This should not be necessary to do, but apparently some
  // idiot module developer is changing the weight of the Taxonomy module...
  $weight = db_result(db_query("SELECT weight FROM {system} WHERE name = 'taxonomy'"));
  $weight = max($weight, db_result(db_query("SELECT weight FROM {system} WHERE name = 'content_taxonomy'")));
  $weight++;
  $ret[] = update_sql("UPDATE {system} SET weight = $weight WHERE name  = 'hierarchical_select'");

  return $ret;
}

// Update module weight again, this time for i18ntaxonomy compatibility.
function hierarchical_select_update_2() {
  $ret = array();

  $weight = db_result(db_query("SELECT weight FROM {system} WHERE name = 'taxonomy'"));
  $weight = max($weight, db_result(db_query("SELECT weight FROM {system} WHERE name = 'content_taxonomy'")));
  $weight = max($weight, db_result(db_query("SELECT weight FROM {system} WHERE name = 'i18ntaxonomy'")));
  $weight++;
  $ret[] = update_sql("UPDATE {system} SET weight = $weight WHERE name  = 'hierarchical_select'");

  return $ret;
}

// Convert the Hierarchical Select settings for each vocabulary to the
// standardized format.
function hierarchical_select_update_3() {
  $ret = array();

  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    $config = array();

    // Generate the config_id.
    $config['config_id'] = "taxonomy-$vid";

    // save_lineage and enforce_deepest settings.
    foreach (array('save_lineage', 'enforce_deepest') as $setting) {
      $var = "hierarchical_select_{$setting}_{$vid}";
      $config[$setting] = (int) variable_get($var, 0);
      variable_del($var);
    }

    // Level labels.
    $var = "hierarchical_select_level_labels_status_{$vid}";
    $config['level_labels']['status'] = variable_get($var, 0);
    variable_del($var);
    $config['level_labels']['labels'] = array();
    for ($depth = 0; $depth < _taxonomy_hierarchical_select_get_depth($vid); $depth++) {
      $var = "hierarchical_select_level_{$depth}_{$vid}";
      $config['level_labels']['labels'][$depth] = variable_get($var, '');
      variable_del($var);
    }

    // Dropbox settings.
    $var = "hierarchical_select_multiple_{$vid}";
    $config['dropbox']['status'] = variable_get($var, 0);
    variable_del($var);
    foreach (array('title', 'limit') as $setting) {
      $var = "hierarchical_select_dropbox_{$setting}_{$vid}";
      $config['dropbox'][$setting] = variable_get($var, 0);
      variable_del($var);
    }
    variable_set('hierarchical_select_config_'. $config['config_id'], $config);

    // Rename the variable that indicates if a vocabulary is using
    // Hierarchical Select or not.
    $var = "hierarchical_select_status_$vid";
    variable_set("taxonomy_hierarchical_select_$vid", variable_get($var, 0));
    variable_del($var);

    drupal_set_message('Migrated Hierarchical Select settings for vocabulary '. $vid .'.');
  }
  
  return $ret;
}
